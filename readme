< Simple File System 구현 > 

Simple File System 프로그램을 짜는 숙제입니다. 

제출 일시 : 12.21(금) 오후 4시 
제출 방법 : linux2 에서 submit ksita oshw4 수행 (sfs_func_hw.c 만 제출합니다!!) 
제출 확인 : submit ksita oshw4 -l (반드시 확인!!!) 
주의 사항 : linux2 에서 sfs_func_hw.c 로 작성하여 제출 합니다(반드시!) 

참고사항 : 숙제 설명 문서 (Homework4.pdf)와 sfs를 수행하여 보시기바랍니다. 
방법 : mkdir testdir 을 수행하여 testdir 디렉토리를 만든다. 그뒤 cd testdir 수행하여 working directory를 testdir로 바꾼다.
cp ~ksilab/hw4/* . 을 수행하여 필요한 파일들을 복사한다. sfs를 수행해본다. sfs_func_hw.c를 수정하여 프로그램을 완성한다. 

서버 시간에 오차가 있을 수 있으니 date 명령어로 서버 시간을 확인하고 항상 몇분 여유있게 submit을 수행하세요. 

<컴파일 방법> 
cc -o mysfs sfs_disk.c sfs_func_hw.c sfs_main.c sfs_func_ext.o 

mysfs 는 mout, dump 외에도 fsck 와 bitmap 명령어를 수행할 수 있습니다. 
fsck 는 파일 시스템의 트리를 차례로 따라가며 bitmap의 bit와 block의 사용이 일치하는지 확인한다. 문제가 있을시 "error"가 들어 있는 문장을 출력한다. 
bitmap 은 bitmap 데이터를 출력합니다. 
이들 명령어는 과제의 명령어 수행 후 명령어가 잘 수행되었는지 디버깅 할 때 참고로 사용하면 됩니다. 

<test_* 사용법> 
test_ 로시작하는 명령어 파일들이 제공되는데 이를 사용하여 작성한 프로그램이 제대로 동작하는지 sfs 와 비교 할수 있습니다. 
test_* 파일을 사용하기 전에 항상 DISK1.img 와 DISK2.img 파일을 순정(original) 상태로 준비해야 합니다. 
test_* 사용 한후에는 DISK1.img 또는 DISK2.img 파일이 변경됩니다. 
(test_파일을 보면 어느 DISK img 파일이 mount 되어 사용되는지 파악할 수 있습니다) 

사용용방법은 다음과 같습니다. (test_파일 은 주어진 test_ 로시작되는 파일 중 하나를 의미합니다) 

./mysfs < test_파일 

이 경우 터미널로 메세지가 출력됩니다.(각 명령어 수행 후의 mysfs 의 출력 메세지 입니다.) 
그리고 사용된 DISK 이미지 파일이 변경 됩니다. 
같은 방법으로 sfs를 수행하여 봅니다. ( ./sfs < test_파일 ) DISK 이미지 파일을 변경 전 것을 사용하는 것을 잊지마세요. 
sfs의 수행에서 나온 출력을 mysfs 와 비교합니다. 같은 출력이 나와야 합니다.(에러 메시지에 따라 약간 다를 수도 있지만 같은게 좋습니다) 

수행의 결과로 변경된 DISK 이미지 파일을 다음 명령어로 비교하여 봅니다. 
diff DISK1_mysfs.img DISK1_sfs.img 

해당 명령어 수행 결과로 아무 결과가 출력안되면 두 이미지 파일이 같은 것으로 mysfs 가 sfs와 같이 수행된 것입니다. 다른 경우에는 mysfs가 에러를 가지고 있을 확률이 아주 높습니다. 
참고로 test_파일을 사용할 경우 test_파일 안에서 사용되는 명령어가 완성된 경우에만 사용하여야 합니다. 

참고사항 : sfs shell을 수행하여 DISK 이미지 파일을 mount 하고 작성한 명령어를 수행한 뒤에 umount 한다. 
그리고 다시 해당 DISK 이미지 파일을 mount 했을 때 수행된 명령어의 결과가 반영되어 있어야 한다. 
이를 위해서는 명령어 수행에 따른 모든 변화 (I-node, data blocks, bitmap blocks 등등) 반드시 disk_write() 를 통하여 DISK 이미지 파일에 써져야 한다.